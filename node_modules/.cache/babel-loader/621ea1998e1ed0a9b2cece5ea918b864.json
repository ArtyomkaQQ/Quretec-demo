{"ast":null,"code":"import \"antd/es/table/style\";\nimport _Table from \"antd/es/table\";\nimport \"antd/es/tooltip/style\";\nimport _Tooltip from \"antd/es/tooltip\";\nimport \"antd/es/button/style\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/input/style\";\nimport _Input from \"antd/es/input\";\nvar _jsxFileName = \"/home/artyom/Documents/test/src/Group.js\";\nimport React, { Component } from \"react\";\nimport { SearchOutlined } from \"@ant-design/icons\";\nimport Highlighter from 'react-highlight-words';\nimport counterpart from \"counterpart\";\nimport Translate from \"react-translate-component\";\nimport ee from \"./lang/ee\";\nimport en from \"./lang/en\";\nconst {\n  Search\n} = _Input;\ncounterpart.registerTranslations(\"ee\", ee);\ncounterpart.registerTranslations(\"en\", en);\ncounterpart.setLocale(\"ee\");\n\nclass Group extends Component {\n  constructor(props) {\n    super(props);\n\n    this.toggle = () => this.setState(currentState => ({\n      show: !currentState.show\n    }));\n\n    this.onLangChange = e => {\n      this.setState({\n        lang: e.target.value\n      });\n      counterpart.setLocale(e.target.value);\n    };\n\n    this.getColumnSearchProps = dataIndex => ({\n      filterDropdown: ({\n        setSelectedKeys,\n        selectedKeys,\n        confirm,\n        clearFilters\n      }) => /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          padding: 8\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(_Input, {\n        ref: node => {\n          this.searchInput = node;\n        },\n        placeholder: `Search ${dataIndex}`,\n        value: selectedKeys[0],\n        onChange: e => setSelectedKeys(e.target.value ? [e.target.value] : []),\n        onPressEnter: () => this.handleSearch(selectedKeys, confirm, dataIndex),\n        style: {\n          width: 188,\n          marginBottom: 8,\n          display: 'block'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(_Button, {\n        type: \"primary\",\n        onClick: () => this.handleSearch(selectedKeys, confirm, dataIndex),\n        icon: /*#__PURE__*/React.createElement(SearchOutlined, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 17\n          }\n        }),\n        size: \"small\",\n        style: {\n          width: 90,\n          marginRight: 8\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 9\n        }\n      }, \"Search\"), /*#__PURE__*/React.createElement(_Button, {\n        onClick: () => this.handleReset(clearFilters),\n        size: \"small\",\n        style: {\n          width: 90\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 9\n        }\n      }, \"Reset\")),\n      filterIcon: filtered => /*#__PURE__*/React.createElement(SearchOutlined, {\n        style: {\n          color: filtered ? '#1890ff' : undefined\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 29\n        }\n      }),\n      onFilter: (value, record) => record[dataIndex].toString().toLowerCase().includes(value.toLowerCase()),\n      onFilterDropdownVisibleChange: visible => {\n        if (visible) {\n          setTimeout(() => this.searchInput.select());\n        }\n      },\n      render: text => this.state.searchedColumn === dataIndex ? /*#__PURE__*/React.createElement(Highlighter, {\n        highlightStyle: {\n          backgroundColor: '#ffc069',\n          padding: 0\n        },\n        searchWords: [this.state.searchText],\n        autoEscape: true,\n        textToHighlight: text.toString(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 9\n        }\n      }) : text\n    });\n\n    this.handleSearch = (selectedKeys, confirm, dataIndex) => {\n      confirm();\n      this.setState({\n        searchText: selectedKeys[0],\n        searchedColumn: dataIndex\n      });\n    };\n\n    this.handleReset = clearFilters => {\n      clearFilters();\n      this.setState({\n        searchText: ''\n      });\n    };\n\n    this.state = {\n      show: false,\n      searchText: '',\n      searchedColumn: ''\n    };\n  }\n\n  async componentDidMount() {\n    const response = await fetch(\"/api/v1/groups\");\n    const body = await response.json();\n    this.setState({\n      groups: body,\n      isLoading: false\n    });\n    const responseExp = await fetch(\"/api/expenses\");\n    const bodyExp = await responseExp.json();\n    this.setState({\n      expenses: bodyExp,\n      isLoading: false\n    });\n    console.log(bodyExp);\n  }\n\n  render() {\n    const columns = [{\n      title: 'Grupi nimetus',\n      dataIndex: 'name',\n      key: 'name',\n      width: '30%',\n      ...this.getColumnSearchProps('name')\n    }, {\n      title: 'Selgitus',\n      dataIndex: 'age',\n      key: 'age',\n      width: '20%',\n      ...this.getColumnSearchProps('age')\n    }, {\n      title: 'Seotud vormingute hulk',\n      dataIndex: 'address',\n      key: 'address',\n      ...this.getColumnSearchProps('address')\n    }, {\n      title: 'Seotud vormingud',\n      dataIndex: 'address',\n      key: 'address',\n      ...this.getColumnSearchProps('address')\n    }, {\n      title: 'Action',\n      dataIndex: '',\n      key: 'x'\n    }];\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(_Tooltip, {\n      title: \"search\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(_Button, {\n      type: \"primary\",\n      shape: \"circle\",\n      icon: /*#__PURE__*/React.createElement(SearchOutlined, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 19\n        }\n      }),\n      onClick: this.toggle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 11\n      }\n    }), this.state.show && /*#__PURE__*/React.createElement(Search, {\n      placeholder: \"input search text\",\n      onSearch: value => console.log(value),\n      style: {\n        width: 200,\n        marginLeft: 10\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"h2\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Translate, {\n      content: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(_Table, {\n      columns: columns,\n      dataSource: null,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default Group;","map":{"version":3,"sources":["/home/artyom/Documents/test/src/Group.js"],"names":["React","Component","SearchOutlined","Highlighter","counterpart","Translate","ee","en","Search","registerTranslations","setLocale","Group","constructor","props","toggle","setState","currentState","show","onLangChange","e","lang","target","value","getColumnSearchProps","dataIndex","filterDropdown","setSelectedKeys","selectedKeys","confirm","clearFilters","padding","node","searchInput","handleSearch","width","marginBottom","display","marginRight","handleReset","filterIcon","filtered","color","undefined","onFilter","record","toString","toLowerCase","includes","onFilterDropdownVisibleChange","visible","setTimeout","select","render","text","state","searchedColumn","backgroundColor","searchText","componentDidMount","response","fetch","body","json","groups","isLoading","responseExp","bodyExp","expenses","console","log","columns","title","key","marginLeft","justifyContent","alignItems"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Button, Tooltip, Table, Input } from \"antd\";\nimport { SearchOutlined } from \"@ant-design/icons\";\nimport Highlighter from 'react-highlight-words';\nimport counterpart from \"counterpart\";\nimport Translate from \"react-translate-component\";\nimport ee from \"./lang/ee\";\nimport en from \"./lang/en\";\n\nconst { Search } = Input;\ncounterpart.registerTranslations(\"ee\", ee);\ncounterpart.registerTranslations(\"en\", en);\ncounterpart.setLocale(\"ee\");\n\nclass Group extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      show: false,\n      searchText: '',\n      searchedColumn: '',\n    };\n  }\n\n  toggle = () =>\n    this.setState((currentState) => ({ show: !currentState.show }));\n\n  onLangChange = (e) => {\n    this.setState({ lang: e.target.value });\n    counterpart.setLocale(e.target.value);\n  };\n\n  getColumnSearchProps = dataIndex => ({\n    filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\n      <div style={{ padding: 8 }}>\n        <Input\n          ref={node => {\n            this.searchInput = node;\n          }}\n          placeholder={`Search ${dataIndex}`}\n          value={selectedKeys[0]}\n          onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\n          onPressEnter={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\n          style={{ width: 188, marginBottom: 8, display: 'block' }}\n        />\n        <Button\n          type=\"primary\"\n          onClick={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\n          icon={<SearchOutlined />}\n          size=\"small\"\n          style={{ width: 90, marginRight: 8 }}\n        >\n          Search\n        </Button>\n        <Button onClick={() => this.handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\n          Reset\n        </Button>\n      </div>\n    ),\n    filterIcon: filtered => <SearchOutlined style={{ color: filtered ? '#1890ff' : undefined }} />,\n    onFilter: (value, record) =>\n      record[dataIndex]\n        .toString()\n        .toLowerCase()\n        .includes(value.toLowerCase()),\n    onFilterDropdownVisibleChange: visible => {\n      if (visible) {\n        setTimeout(() => this.searchInput.select());\n      }\n    },\n    render: text =>\n      this.state.searchedColumn === dataIndex ? (\n        <Highlighter\n          highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\n          searchWords={[this.state.searchText]}\n          autoEscape\n          textToHighlight={text.toString()}\n        />\n      ) : (\n          text\n        ),\n  });\n\n  handleSearch = (selectedKeys, confirm, dataIndex) => {\n    confirm();\n    this.setState({\n      searchText: selectedKeys[0],\n      searchedColumn: dataIndex,\n    });\n  };\n\n  handleReset = clearFilters => {\n    clearFilters();\n    this.setState({ searchText: '' });\n  };\n\n  async componentDidMount() {\n    const response = await fetch(\"/api/v1/groups\");\n    const body = await response.json();\n    this.setState({ groups: body, isLoading: false });\n\n    const responseExp = await fetch(\"/api/expenses\");\n    const bodyExp = await responseExp.json();\n    this.setState({ expenses: bodyExp, isLoading: false });\n    console.log(bodyExp);\n  }\n\n  render() {\n    const columns = [\n      {\n        title: 'Grupi nimetus',\n        dataIndex: 'name',\n        key: 'name',\n        width: '30%',\n        ...this.getColumnSearchProps('name'),\n      },\n      {\n        title: 'Selgitus',\n        dataIndex: 'age',\n        key: 'age',\n        width: '20%',\n        ...this.getColumnSearchProps('age'),\n      },\n      {\n        title: 'Seotud vormingute hulk',\n        dataIndex: 'address',\n        key: 'address',\n        ...this.getColumnSearchProps('address'),\n      },\n      {\n        title: 'Seotud vormingud',\n        dataIndex: 'address',\n        key: 'address',\n        ...this.getColumnSearchProps('address'),\n      },\n      {\n        title: 'Action',\n        dataIndex: '',\n        key: 'x'\n      }\n    ];\n\n    return (\n      <div>\n        <Tooltip title=\"search\">\n          <Button\n            type=\"primary\"\n            shape=\"circle\"\n            icon={<SearchOutlined />}\n            onClick={this.toggle}\n          ></Button>\n          {this.state.show && (\n            <Search\n              placeholder=\"input search text\"\n              onSearch={(value) => console.log(value)}\n              style={{ width: 200, marginLeft: 10 }}\n            />\n          )}\n        </Tooltip>\n\n        <h2\n          style={{\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n          }}\n        >\n          <Translate content=\"title\" />\n        </h2>\n\n        <Table columns={columns} dataSource={null} />\n      </div>\n    );\n  }\n}\n\nexport default Group;\n"]},"metadata":{},"sourceType":"module"}
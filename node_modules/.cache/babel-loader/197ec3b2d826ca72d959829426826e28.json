{"ast":null,"code":"'use strict';\n\nvar React = require('react');\n\nvar invariant = require('invariant');\n\nvar except = require('except');\n\nvar extend = require('object-assign');\n\nvar createReactClass = require('create-react-class');\n\nfunction isString(object) {\n  return Object.prototype.toString.call(object) === '[object String]';\n}\n\nvar REGEXP = /\\%\\((.+?)\\)s/;\nvar OMITTED_PROPS = ['children', 'format', 'component', 'unsafe', 'with'];\nvar Interpolate = createReactClass({\n  displayName: 'Interpolate',\n  getDefaultProps: function () {\n    return {\n      component: 'span'\n    };\n  },\n  render: function () {\n    var format = this.props.children;\n    var parent = this.props.component;\n    var unsafe = this.props.unsafe === true;\n    var interpolations = extend({}, this.props, this.props.with);\n    var props = except(this.props, OMITTED_PROPS);\n    var matches = [];\n    var children = [];\n\n    if (!isString(format)) {\n      format = this.props.format;\n    }\n\n    invariant(isString(format), 'Interpolate expects either a format string as only child or a `format` prop with a string value');\n\n    if (unsafe) {\n      var content = format.split(REGEXP).reduce(function (memo, match, index) {\n        var html;\n\n        if (index % 2 === 0) {\n          html = match;\n        } else {\n          html = interpolations[match];\n          matches.push(match);\n        }\n\n        if (React.isValidElement(html)) {\n          throw new Error('cannot interpolate a React component into unsafe text');\n        }\n\n        memo += html;\n        return memo;\n      }, '');\n      props.dangerouslySetInnerHTML = {\n        __html: content\n      };\n    } else {\n      format.split(REGEXP).reduce(function (memo, match, index) {\n        var child;\n\n        if (index % 2 === 0) {\n          if (match.length === 0) {\n            return memo;\n          }\n\n          child = match;\n        } else {\n          child = interpolations[match];\n          matches.push(match);\n        }\n\n        memo.push(child);\n        return memo;\n      }, children);\n    }\n\n    props = except(props, matches);\n    return React.createElement.apply(this, [parent, props].concat(children));\n  }\n});\nmodule.exports = Interpolate;","map":{"version":3,"sources":["/home/artyom/Documents/test/node_modules/react-interpolate-component/index.js"],"names":["React","require","invariant","except","extend","createReactClass","isString","object","Object","prototype","toString","call","REGEXP","OMITTED_PROPS","Interpolate","displayName","getDefaultProps","component","render","format","props","children","parent","unsafe","interpolations","with","matches","content","split","reduce","memo","match","index","html","push","isValidElement","Error","dangerouslySetInnerHTML","__html","child","length","createElement","apply","concat","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\nvar React = require('react');\nvar invariant = require('invariant');\nvar except = require('except');\nvar extend = require('object-assign');\nvar createReactClass = require('create-react-class');\n\nfunction isString(object) {\n  return Object.prototype.toString.call(object) === '[object String]';\n}\n\nvar REGEXP = /\\%\\((.+?)\\)s/;\nvar OMITTED_PROPS = ['children', 'format', 'component', 'unsafe', 'with'];\n\nvar Interpolate = createReactClass({\n  displayName: 'Interpolate',\n\n  getDefaultProps: function() {\n    return { component: 'span' };\n  },\n\n  render: function() {\n    var format         = this.props.children;\n    var parent         = this.props.component;\n    var unsafe         = this.props.unsafe === true;\n    var interpolations = extend({}, this.props, this.props.with);\n    var props          = except(this.props, OMITTED_PROPS);\n\n    var matches = [];\n    var children = [];\n\n    if (!isString(format)) {\n      format = this.props.format;\n    }\n\n    invariant(isString(format), 'Interpolate expects either a format string as only child or a `format` prop with a string value');\n\n    if (unsafe) {\n      var content = format.split(REGEXP).reduce(function(memo, match, index) {\n        var html;\n\n        if (index % 2 === 0) {\n          html = match;\n        } else {\n          html = interpolations[match];\n          matches.push(match);\n        }\n\n        if (React.isValidElement(html)) {\n          throw new Error('cannot interpolate a React component into unsafe text');\n        }\n\n        memo += html;\n\n        return memo;\n      }, '');\n\n      props.dangerouslySetInnerHTML = { __html: content };\n    } else {\n      format.split(REGEXP).reduce(function(memo, match, index) {\n        var child;\n\n        if (index % 2 === 0) {\n          if (match.length === 0) {\n            return memo;\n          }\n\n          child = match;\n        } else {\n          child = interpolations[match];\n          matches.push(match);\n        }\n\n        memo.push(child);\n\n        return memo;\n      }, children);\n    }\n\n    props = except(props, matches);\n\n    return React.createElement.apply(this, [parent, props].concat(children));\n  }\n});\n\nmodule.exports = Interpolate;\n"]},"metadata":{},"sourceType":"script"}